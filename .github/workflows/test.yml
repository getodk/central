name: Test

on:
  push:
  pull_request:

env:
  REGISTRY: ghcr.io

jobs:
  test-misc: # quick, simple checks
    timeout-minutes: 2
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - run: sudo apt-get install shellcheck
    - run: ./test/check-scripts.sh
    - run: ./test/check-dockerfiles.sh
  test-nginx:
    timeout-minutes: 10
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
        fetch-tags: true
        submodules: recursive
    - uses: actions/setup-node@v4
      with:
        node-version: 22.12.0
    - run: cd test/nginx && npm i
    - run: cd test/nginx && ./run-tests.sh

    - if: always()
      run: cd test/nginx && docker compose -f nginx.test.docker-compose.yml logs --no-log-prefix nginx
    - if: always()
      run: cd test/nginx && docker compose -f nginx.test.docker-compose.yml logs --no-log-prefix service
    - if: always()
      run: cd test/nginx && docker compose -f nginx.test.docker-compose.yml logs --no-log-prefix enketo
  test-images:
    needs:
    - test-misc
    - test-nginx
    runs-on: ubuntu-latest # TODO matrix to run on all expected versions?
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
        fetch-tags: true
        submodules: recursive
    - run: ./test/test-images.sh
    - if: always()
      run: docker compose logs
  check-image-references:
    if: ${{ github.ref_type == 'tag' }}
    needs:
    - test-images
    runs-on: ubuntu-latest
    strategy:
      matrix:
        image: [nginx, service]
    steps:
    - name: Check tag format
      run: '[[ "${{ github.ref_name }}" = v*.*.* ]]'
    - name: Checkout repository
      uses: actions/checkout@v4
    - name: Extract Docker metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ github.repository_owner }}/central-${{ matrix.image }}
    - name: Check release image is referenced in docker-compose.yml
      run: 'grep "${{ steps.meta.outputs.tags }}" docker-compose.yml'
  build-push-image:
    needs:
    - check-image-references
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    strategy:
      matrix:
        image: [nginx, service]
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        fetch-tags: true
        submodules: recursive
    - name: Log into registry ${{ env.REGISTRY }}
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Extract Docker metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ github.repository_owner }}/central-${{ matrix.image }}
    - name: Set up QEMU emulator for multi-arch images
      uses: docker/setup-qemu-action@v3
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    - name: Build and push ${{ matrix.image }} Docker image
      uses: docker/build-push-action@v5
      with:
        file: ${{ matrix.image }}.dockerfile
        context: .
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        platforms: 'linux/amd64,linux/arm64'
